index.html 
<html><head><title>Results for Default 
suite</title></head> 
<frameset cols="26%,74%"> 
<frame src="toc.html" name="navFrame"> 
<frame src="main.html" name="mainFrame"> 
</frameset> 
</html> 
Emailable-report.html 
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" 
"https://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"> 
<html xmlns="https://www.w3.org/1999/xhtml"> 
<head> 
<meta http-equiv="content-type" content="text/html; charset=UTF-8"/> 
<title>TestNG Report</title> 
<style type="text/css">table {margin-bottom:10px;border- collapse:collapse;empty-cells:show}th,td {border:1px solid #009;padding:.25em .5em}th {vertical- align:bottom}td {vertical-align:top}table a {font- weight:bold}.stripe td {background-color: #E6EBF9}.num 
{text-align:right}.passedodd td {background-color: #3F3}.passedeven td {background-color: #0A0}.skippedodd td {background-color: #DDD}.skippedeven td {background- color: #CCC}.failedodd td,.attn {background-color: #F33}.failedeven td,.stripe .attn {background-color: #D00}.stacktrace {white-space:pre;font- family:monospace}.totop {font-size:85%;text- 
align:center;border-bottom:2px solid #000}.invisible 
{display:none}</style> 
</head> 
<body> 
<table> 
<tr><th>Test</th><th># Passed</th><th># Skipped</th><th># Retried</th><th># Failed</th><th>Time (ms)</th><th>Included Groups</th><th>Excluded Groups</th></tr> 
<tr><th colspan="8">Default suite</th></tr> 
<tr><td><a href="#t0">Default test</a></td><td class="num">3</td><td class="num">0</td><td class="num">0</td><td class="num">0</td><td class="num">14,871</td><td></td><td></td></tr> 
</table> 
<table id='summary'><thead><tr><th>Class</th><th>Method</th><th 
>Start</th><th>Time (ms)</th></tr></thead><tbody><tr><th colspan="4">Default suite</th></tr></tbody><tbody id="t0"><tr><th colspan="4">Default test &#8212; passed</th></tr><tr class="passedeven"><td rowspan="3">com.ecom.webapp.SoftAssertWithSimplilearnLog In</td><td><a href="#m0">launchChromeTest</a></td><td rowspan="1">1622223576846</td><td rowspan="1">10891</td></tr><tr class="passedeven"><td><a href="#m1">testSimplilearnHomePageTitle</a></td><td rowspan="1">1622223587744</td><td rowspan="1">12</td></tr><tr class="passedeven"><td><a href="#m2">testSimplilearnLogin</a></td><td rowspan="1">1622223587757</td><td rowspan="1">3915</td></tr></tbody> 
</table> 
<h2>Default test</h2><h3 id="m0">com.ecom.webapp.SoftAssertWithSimplilearnLogIn#l aunchChromeTest</h3><table class="result"><tr><th class="invisible"/></tr></table><p class="totop"><a href="#summary">back to summary</a></p> 
<h3 id="m1">com.ecom.webapp.SoftAssertWithSimplilearnLogIn#t estSimplilearnHomePageTitle</h3><table class="result"><tr><th class="invisible"/></tr></table><p class="totop"><a href="#summary">back to summary</a></p> 
<h3 id="m2">com.ecom.webapp.SoftAssertWithSimplilearnLogIn#t estSimplilearnLogin</h3><table class="result"><tr><th class="invisible"/></tr></table><p class="totop"><a href="#summary">back to summary</a></p> 
</body> 
</html> 
Testng-results.html 
<?xml version="1.0" encoding="UTF-8"?> 
<testng-results ignored="0" total="3" passed="3" failed="0" skipped="0"> 
<reporter-output> 
</reporter-output> 
<suite started-at="2021-05-28T23:09:36 IST" name="Default suite" finished-at="2021-05-28T23:09:51 IST" duration-ms="14871"> 
<groups> 
<group name="ChromeOnly"> 
<method signature="SoftAssertWithSimplilearnLogIn.launchChromeTe st()[pri:0, instance:com.ecom.webapp.SoftAssertWithSimplilearnLogIn@ 6d3a388c]" name="launchChromeTest" class="com.ecom.webapp.SoftAssertWithSimplilearnLogIn"/> 
<method signature="SoftAssertWithSimplilearnLogIn.testSimplilear nHomePageTitle()[pri:1, instance:com.ecom.webapp.SoftAssertWithSimplilearnLogIn@ 6d3a388c]" name="testSimplilearnHomePageTitle" class="com.ecom.webapp.SoftAssertWithSimplilearnLogIn"/> 
<method signature="SoftAssertWithSimplilearnLogIn.testSimplilear nLogin()[pri:1, instance:com.ecom.webapp.SoftAssertWithSimplilearnLogIn@ 6d3a388c]" name="testSimplilearnLogin" class="com.ecom.webapp.SoftAssertWithSimplilearnLogIn"/> 
</group> <!-- ChromeOnly --> 
</groups> 
<test started-at="2021-05-28T23:09:36 IST" name="Default test" finished-at="2021-05-28T23:09:51 IST" duration-ms="14871"> 
<class name="com.ecom.webapp.SoftAssertWithSimplilearnLogIn"> 
<test-method signature="launchChromeTest()[pri:0, instance:com.ecom.webapp.SoftAssertWithSimplilearnLogIn@ 6d3a388c]" started-at="2021-05-28T23:09:36 IST" 
name="launchChromeTest" finished-at="2021-05-28T23:09:47 IST" duration-ms="10891" status="PASS"> 
<reporter-output> 
</reporter-output> 
</test-method> <!-- launchChromeTest --> 
<test-method signature="testSimplilearnHomePageTitle()[pri:1, instance:com.ecom.webapp.SoftAssertWithSimplilearnLogIn@ 6d3a388c]" started-at="2021-05-28T23:09:47 IST" 
name="testSimplilearnHomePageTitle" finished-at="2021- 05-28T23:09:47 IST" depends-on- methods="com.ecom.webapp.SoftAssertWithSimplilearnLogIn. launchChromeTest" duration-ms="12" status="PASS"> 
<reporter-output> 
</reporter-output> 
</test-method> <!-- testSimplilearnHomePageTitle 
--> 
<test-method 
signature="testSimplilearnLogin()[pri:1, instance:com.ecom.webapp.SoftAssertWithSimplilearnLogIn@ 6d3a388c]" started-at="2021-05-28T23:09:47 IST" 
name="testSimplilearnLogin" finished-at="2021-05- 28T23:09:51 IST" depends-on- methods="com.ecom.webapp.SoftAssertWithSimplilearnLogIn. launchChromeTest" duration-ms="3915" status="PASS"> 
<reporter-output> 
</reporter-output> 
</test-method> <!-- testSimplilearnLogin --> 
</class> <!-- com.ecom.webapp.SoftAssertWithSimplilearnLogIn --> 
</test> <!-- Default test --> 
</suite> <!-- Default suite --> 
</testng-results> 
Testng-failed.html 
<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE suite SYSTEM "https://testng.org/testng- 1.0.dtd"> 
<suite name="Failed suite [Default suite]" guice- stage="DEVELOPMENT"> 
<test thread-count="5" name="Default test(failed)"> 
<classes> 
<class name="com.ecom.webapp.SoftAssertWithSimplilearnLogIn"> 
<methods> 
<include name="launchChromeTest"/> 
<include name="testSimplilearnHomePageTitle"/> 
</methods> 
</class> <!-- com.ecom.webapp.SoftAssertWithSimplilearnLogIn --> 
</classes> 
</test> <!-- Default test(failed) --> 
</suite> <!-- Failed suite [Default suite] --> 
Testng-reports.js 
$(document).ready(function() { 
$('a.navigator-link').on("click", function() { 
// Extract the panel for this link var panel = getPanelName($(this)); 
// Mark this link as currently selected 
$('.navigator- link').parent().removeClass('navigator-selected'); 
$(this).parent().addClass('navigator-selected'); 
showPanel(panel); 
}); 
installMethodHandlers('failed'); installMethodHandlers('skipped'); installMethodHandlers('passed', true); // hide 
passed methods by default 
$('a.method').on("click", function() { showMethod($(this)); 
return false; 
}); 
// Hide all the panels and display the first one (do this last 
// to make sure the click() will invoke the listeners) 
$('.panel').hide(); 
$('.navigator-link').first().trigger("click"); 
// Collapse/expand the suites 
$('a.collapse-all-link').on("click", function() { var contents = $('.navigator-suite-content'); if (contents.css('display') == 'none') { 
contents.show(); 
} else { 
contents.hide(); 
}); 
} 
}); 
// The handlers that take care of showing/hiding the methods 
function installMethodHandlers(name, hide) { function getContent(t) { 
return $('.method-list-content.' + name + "." + t.attr('panel-name')); 
} 
function getHideLink(t, name) { 
var s = 'a.hide-methods.' + name + "." + t.attr('panel-name'); 
return $(s); 
} 
function getShowLink(t, name) { 
return $('a.show-methods.' + name + "." + t.attr('panel-name')); 
} 
function getMethodPanelClassSel(element, name) { var panelName = getPanelName(element); 
var sel = '.' + panelName + "-class-" + name; return $(sel); 
} 
$('a.hide-methods.' + name).on("click", function() { var w = getContent($(this)); 
w.hide(); 
getHideLink($(this), name).hide(); getShowLink($(this), name).show(); 
getMethodPanelClassSel($(this), name).hide(); 
}); 
$('a.show-methods.' + name).on("click", function() { var w = getContent($(this)); 
w.show(); 
getHideLink($(this), name).show(); getShowLink($(this), name).hide(); 
showPanel(getPanelName($(this))); getMethodPanelClassSel($(this), name).show(); 
}); 
if (hide) { 
$('a.hide-methods.' + name).trigger("click"); 
} else { 
$('a.show-methods.' + name).trigger("click"); 
} 
} 
function getHashForMethod(element) { 
return element.attr('hash-for-method'); 
} 
function getPanelName(element) { return element.attr('panel-name'); 
} 
function showPanel(panelName) { 
$('.panel').hide(); 
var panel = $('.panel[panel-name="' + panelName + '"]'); 
panel.show(); 
} 
function showMethod(element) { 
var hashTag = getHashForMethod(element); var panelName = getPanelName(element); showPanel(panelName); 
var current = document.location.href; var base = current.substring(0, 
current.indexOf('#')) 
document.location.href = base + '#' + hashTag; var newPosition = $(document).scrollTop() - 65; 
$(document).scrollTop(newPosition); 
} 
function drawTable() { 
for (var i = 0; i < suiteTableInitFunctions.length; i++) { 
window[suiteTableInitFunctions[i]](); 
} 
for (var k in window.suiteTableData) { var v = window.suiteTableData[k]; var div = v.tableDiv; 
var data = v.tableData 
var table = new google.visualization.Table(document.getElementById(div)) 
; 
table.draw(data, { showRowNumber : false 
}); 
} 
} 
Pom.xml 
<?xml version="1.0" encoding="UTF-8"?> 
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"> 
<modelVersion>4.0.0</modelVersion> 
<groupId>com.ecom.webapp</groupId> 
<artifactId>phase-5-selenium-testng</artifactId> 
<version>0.0.1-SNAPSHOT</version> 
<name>phase-5-selenium-testng</name> 
<!-- FIXME change it to the project's website --> 
<url>http://www.example.com</url> 
<properties> 
<project.build.sourceEncoding>UTF- 8</project.build.sourceEncoding> 
<maven.compiler.source>1.7</maven.compiler.source> 
<maven.compiler.target>1.7</maven.compiler.target> 
</properties> 
<dependencies> 
<!-- Add testng maven dependency--> 
<dependency> 
<groupId>org.testng</groupId> 
<artifactId>testng</artifactId> 
<version>7.3.0</version> 
<scope>test</scope> 
</dependency> 
<!-- selenium-java --> 
<dependency> 
<groupId>org.seleniumhq.selenium</groupId> 
<artifactId>selenium-java</artifactId> 
<version>3.141.59 </version> 
</dependency> 
</dependencies> 
</project> 
Classes.html 
<table border='1'> 
<tr> 
<th>Class name</th> 
<th>Method name</th> 
<th>Groups</th> 
</tr><tr> 
<td>com.ecom.webapp.SoftAssertWithSimplilearnLogIn</td> 
<td>&nbsp;</td><td>&nbsp;</td></tr> 
<tr> 
<td align='center' colspan='3'>@Test</td> 
</tr> 
<tr> 
<td>&nbsp;</td> 
<td>launchChromeTest</td> 
<td>ChromeOnly </td> 
</tr> 
<tr> 
<td>&nbsp;</td> 
<td>testSimplilearnLogin</td> 
<td>ChromeOnly </td> 
</tr> 
<tr> 
<td>&nbsp;</td> 
<td>testSimplilearnHomePageTitle</td> 
<td>ChromeOnly </td> 
</tr> 
<tr> 
<td align='center' colspan='3'>@BeforeClass</td> 
</tr> 
<tr> 
<td align='center' colspan='3'>@BeforeMethod</td> 
</tr> 
<tr> 
<td align='center' colspan='3'>@AfterMethod</td> 
</tr> 
<tr> 
<td align='center' colspan='3'>@AfterClass</td> 
</tr> 
</table> 
Methods-alphabetical.html 
<h2>Methods run, sorted chronologically</h2><h3>&gt;&gt; means before, &lt;&lt; means after</h3><p/><br/><em>Default suite</em><p/><small><i>(Hover the method name to see the test class name)</i></small><p/> 
<table border="1"> 
<tr><th>Time</th><th>Delta (ms)</th><th>Suite<br>configuration</th><th>Test<br>conf iguration</th><th>Class<br>configuration</th><th>Groups< br>configuration</th><th>Method<br>configuration</th><th 
>Test<br>method</th><th>Thread</th><th>Instances</th></t r> 
<tr bgcolor="88d8b8"> <td>21/05/28 23:09:36</td> 
<td>0</td> 
<td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;< 
/td><td>&nbsp;</td><td title="SoftAssertWithSimplilearnLogIn.launchChromeTest() [pri:0, instance:com.ecom.webapp.SoftAssertWithSimplilearnLogIn@ 6d3a388c]">launchChromeTest</td> 
<td>main@1158258131</td> <td></td> </tr> 
<tr bgcolor="88d8b8"> <td>21/05/28 23:09:47</td> 
<td>10899</td> 
<td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;< 
/td><td>&nbsp;</td><td title="SoftAssertWithSimplilearnLogIn.testSimplilearnHom ePageTitle()[pri:1, instance:com.ecom.webapp.SoftAssertWithSimplilearnLogIn@ 6d3a388c]">testSimplilearnHomePageTitle</td> 
<td>main@1158258131</td> <td></td> </tr> 
<tr bgcolor="88d8b8"> <td>21/05/28 23:09:47</td> 
<td>10912</td> 
<td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;< 
/td><td>&nbsp;</td><td title="SoftAssertWithSimplilearnLogIn.testSimplilearnLog in()[pri:1, instance:com.ecom.webapp.SoftAssertWithSimplilearnLogIn@ 6d3a388c]">testSimplilearnLogin</td> 
<td>main@1158258131</td> <td></td> </tr> 
</table> 
Toc.html 
<html> 
<head> 
<title>Results for Default suite</title> 
<link href="../testng.css" rel="stylesheet" type="text/css" /> 
<link href="../my-testng.css" rel="stylesheet" type="text/css" /> 
</head> 
<body> 
<h3><p align="center">Results for<br/><em>Default suite</em></p></h3> 
<table border='1' width='100%'> 
<tr valign='top'> 
<td>1 test</td> 
<td><a target='mainFrame' href='classes.html'>1 class</a></td> 
<td>3 methods:<br/> &nbsp;&nbsp;<a target='mainFrame' 
href='methods.html'>chronological</a><br/> &nbsp;&nbsp;<a target='mainFrame' href='methods- alphabetical.html'>alphabetical</a><br/> &nbsp;&nbsp;<a target='mainFrame' href='methods-not- run.html'>not run (0)</a></td> 
</tr> 
<td><a target='mainFrame' href='groups.html'>1 group</a></td> 
<td><a target='mainFrame' href='reporter- output.html'>reporter output</a></td> 
<td><a target='mainFrame' href='testng.xml.html'>testng.xml</a></td> 
</tr></table> 
<table width='100%' class='test-passed'> 
<tr><td> 
<table style='width: 100%'><tr><td valign='top'>Default test (3/0/0)</td><td valign='top' align='right'> 
<a href='Default test.html' target='mainFrame'>Results</a> 
</td></tr></table> 
</td></tr><p/> 
</table> 
</body></html> 
AssertionsTest.java 
package com.ecom.webapp; 
import static org.testng.Assert.assertEquals; 
import org.testng.annotations.Test; import org.testng.asserts.SoftAssert; 
public class AssertionsTest { 
//Hard Assert: Hard assert throws an AssertException immediately when an assert statement fails and 
//test suite continues with next @Test 
@Test 
public void hardAssert() { 
System.out.println("-- Hard Assert Method was started... --"); 
assertEquals(true, false); //Assertion Error System.out.println("-- Hard Assert Is Completed. 
"); 
} 
//Soft Assert :: Soft assert collects errors during @Test. 
//Soft assert does not throw an exception when an assert fails. 
@Test 
public void softAssert() { 
SoftAssert softAssert = new SoftAssert(); 
System.out.println("-- Soft Assert Method was started --"); 
softAssert.assertEquals(true, false); softAssert.assertTrue(false); System.out.println("-- Soft Assert Method Was 
Completed --"); 
} 
} 
TestNGGroupTest.java 
package com.ecom.webapp; 
import org.testng.annotations.Test; 
import org.testng.annotations.BeforeMethod; 
import static org.testng.Assert.assertEquals; 
import org.openqa.selenium.WebDriver; 
import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.edge.EdgeDriver; import org.testng.annotations.AfterMethod; 
//Let's do some Test Cases Evaluated in Chrome browser and some in MicrosoftEdge Browser 
public class TestNgGroupTest { 
final String amazonURL = "https://www.amazon.in/"; final String simplilearnURL = 
"https://www.simplilearn.com/"; 
final String chromeDriverPath 
="driver\\chromedriver.exe"; 
final String mirosoftedgeDriverPath 
="driver\\msedgedriver.exe"; 
WebDriver driver1; WebDriver driver2; 
//Chrome browser test -> Group Chrome Test 
@Test(groups="ChromeOnly") public void launchChromeTest() { 
System.setProperty("webdriver.chrome.driver",chromeDrive rPath ); 
driver1 = new ChromeDriver(); driver1.get(amazonURL); 
} 
@Test(groups="ChromeOnly", dependsOnMethods="launchChromeTest", priority=1) 
public void testAmazonHomePage() { 
String expected = "Online Shopping site in India: Shop Online for Mobiles, Books, Watches, Shoes and More 
- Amazon.in"; 
assertEquals(expected,driver1.getTitle()); 
} 
@Test(groups="ChromeOnly", dependsOnMethods="launchChromeTest",priority=2) 
public void testAmazonSourceURL() { assertEquals(amazonURL,driver1.getCurrentUrl()); driver1.close(); 
} 
//Microsoft Edge Test -> Group Microsoft Edge Test @Test(groups="MicrosoftEdgeOnly") 
public void launchMicrosoftEdgeTest() { 
System.setProperty("webdriver.edge.driver",mirosoftedgeD riverPath ); 
driver2 = new EdgeDriver(); driver2.get(simplilearnURL); 
} 
@Test(groups="MicrosoftEdgeOnly",dependsOnMethods="launc hMicrosoftEdgeTest", priority=1) 
public void testSimplilearnHomePageTitle() { String expected = "World's #1 Online Bootcamp & 
Certification Course Provider | Simplilearn"; assertEquals(expected, driver2.getTitle()); 
} 
@Test(groups="MicrosoftEdgeOnly", dependsOnMethods="launchMicrosoftEdgeTest",priority=2) 
public void testSimplilearnSourceURL() { 
assertEquals(simplilearnURL,driver2.getCurrentUrl()); 
driver2.close(); 
} 
} 
TestNGStandardAnnotations.java 
package com.ecom.webapp; 
import org.testng.annotations.AfterClass; import org.testng.annotations.AfterMethod; import org.testng.annotations.AfterSuite; import org.testng.annotations.BeforeClass; import org.testng.annotations.BeforeMethod; import org.testng.annotations.BeforeSuite; import org.testng.annotations.Test; 
public class TestNgStandardAnnotationsTest { @BeforeSuite 
public void beforeSuite() { 
System.out.println("--- Before Suite Is Executed---"); 
} 
@AfterSuite 
public void afterSuite() { 
System.out.println("--- After Suite Is Executed 
---"); 
} 
@BeforeClass 
public void beforeClass() { 
System.out.println("--- Before Class Is Executed 
---"); 
} 
@AfterClass 
public void afterClass() { 
System.out.println("--- After Class Is Executed 
---"); 
} 
@BeforeMethod 
public void setUpBeForEachTest() { System.out.println("--- Before Method Is 
Executed ---"); 
} 
@AfterMethod 
public void tearDownAfterEachTest() { System.out.println("---After Method Is Executed 
---"); 
} 
@Test 
public void testOne() { 
System.out.println("-- Test 1 method is executed 
! --"); 
} 
@Test 
public void testTwo() { 
System.out.println("-- Test 2 method is executed 
! --"); 
} 
@Test 
public void testThree() { 
System.out.println("-- Test 3 method is executed 
! --"); 
} 
} 

