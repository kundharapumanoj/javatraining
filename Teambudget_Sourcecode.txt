App.css 

.App { 
  text-align:   center; 
} 
 
.App-logo { 
  height:  40vmin; 
  pointer-events: none; 
} 
 
@media (prefers-reduced-motion: no-preference) { 
  .App-logo { 
     animation: App-logo-spin infinite 20s linear; 
  } 
} 
 
.App-header { 
  background-color: #282c34; 
  min-height: 100vh; 
  display:  flex; 
  flex-direction:   column; 
  align-items: center; 
  justify-content:   center; 
  font-size:  calc(10px + 2vmin); 
  color:  white; 
} 
 
.App-link { 
  color:  #61dafb; 
} 
 

3
@keyframes App-logo-spin { 
   from { 
      transform: rotate(0deg); 
   } 
   to { 
      transform: rotate(360deg); 
   } 
} 
 
----------------------------------------------------------------------------------------------   

App.js 

import './App.css'; 
import vendors from "./vendors.json"; 
 
var allvendors = ''; 
if(JSON.parse(localStorage.getItem("vendorsUpdate")).len
gth > vendors.length) 
   allvendors = 
JSON.parse(localStorage.getItem("vendorsUpdate")); 
else 
   allvendors = vendors; 
 

var vendorsTemp = [] 
for(let   i  = 0;  i  < allvendors.length;  i++) 
{ 
   if(allvendors[i]    !== null) 
      vendorsTemp.push(allvendors[i]) 
} 
allvendors = vendorsTemp  

4
 
function  App() { 
   return  ( 
      <div  className="App"> 
         <link   rel="stylesheet" 
href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/cs
s/bootstrap.min.css"  integrity="sha384-
Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/
dAiS6JXm" crossorigin="anonymous"></link> 
         <script 
src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/
bootstrap.min.js"></script> 
       
         <div  class="d-flex   justify-content-center"> 
             <div class="w-75 p-3"> 
                <div  class="jumbotron jumbotron-fluid"> 
                   <div> 
                       <div class="alert   alert-light" 
role="alert"> 
                          <h1 className="display-2">Product 
Manager Page</h1> 
                       </div> 
                       <hr/> 
                       <h1 className="display-4">View</h1> 
                       <p className="lead">View all vendor 
information here</p> 
                       <h4>Vendors:</h4> 
                       <ul> 
                          {allvendors.map(s => ( 
                            <div><p className="lead"> {s.id}: 
{s.vendor_name} </p></div>  

5
                           ))} 
                        </ul> 
                        <hr/> 
                        <h1 className="display-4">Add</h1> 
                        <p className="lead">Add a new vendor 
here</p> 
                        <form class="w-50  mx-auto"> 
                           <div  class="input-group"> 
                                  <div  class="input-group-prepend"> 
                                      <div  class="input-group-
text">@</div> 
                                  </div> 
                                  <input   type="text"   class="form-
control"   placeholder="Vendor Name" 
id="vendorName"></input> 
                               </div> 
                               <div  class="input-group"> 
                                  <div  class="input-group-prepend"> 
                                      <div  class="input-group-
text">@</div> 
                                  </div> 
                                  <input   type="text"   class="form-
control"   placeholder="Project    Name" 
id="projectName"></input> 
                               </div> 
                               <br></br> 
                               <button  type="submit"  class="btn   btn-
secondary" onClick={add}>Submit</button> 
                           </form> 
                        <hr/> 
                        <h1 className="display-4">Edit</h1> 

6
                        <p className="lead">Edit an existing 
vendor here</p> 
                        <form class="w-50  mx-auto"> 
                               <div  class="input-group"> 
                                  <div  class="input-group-prepend"> 
                                      <div  class="input-group-
text">#</div> 
                                  </div> 
                                  <input   type="number" class="form-
control"   placeholder="Vendor ID"   id="idEdit"></input> 
                               </div> 
                               <div  class="input-group"> 
                                  <div  class="input-group-prepend"> 
                                      <div  class="input-group-
text">@</div> 
                                  </div> 
                                  <input   type="text"   class="form-
control"   placeholder="Vendor Name" 
id="vendorEdit"></input> 
                               </div> 
                               <div  class="input-group"> 
                                  <div  class="input-group-prepend"> 
                                      <div  class="input-group-
text">@</div> 
                                  </div> 
                                  <input   type="text"   class="form-
control"   placeholder="Project    Name" 
id="projectEdit"></input> 
                               </div> 
                               <br></br> 

7
                               <button  type="submit"  class="btn   btn-
secondary" onClick={edit}>Submit</button> 
 
                        </form> 
                        <hr/> 
                        <h1 className="display-4">Delete</h1> 
                        <p className="lead">Delete an existing 
vendor here</p> 
                        <form class="w-50  mx-auto"> 
                               <div  class="input-group"> 
                                  <div  class="input-group-prepend"> 
                                      <div  class="input-group-
text">#</div> 
                                  </div> 
                                  <input   type="number" class="form-
control"   placeholder="Vendor ID"   id="idDelete"></input> 
                               </div> 
                               <br></br> 
                               <button  type="submit"  class="btn   btn-
secondary" onClick={del}>Submit</button> 
 
                        </form> 
                    </div> 
                 </div> 
             </div> 
          </div> 
 
       </div> 
   ); 
} 
function   add(){  

8
   const vendor = 
document.getElementById('vendorName').value 
   const project  = 
document.getElementById('projectName').value 
   console.log(vendor); 
   console.log(project); 
   const newVendor = { 
      "id"   :  allvendors.length, 
      "vendor_name" : vendor, 
      "project_name" :  project, 
      "project_cost"   :  null 
   } 
 
   //console.log(file.get()); 
   allvendors.push(newVendor); 
   localStorage.setItem("vendorsUpdate", 
JSON.stringify(allvendors)) 
 
} 
function  edit(){ 
   const id  = document.getElementById('idEdit').value 
   const vendor = 
document.getElementById('vendorEdit').value 
   const project  = 
document.getElementById('projectEdit').value 
   if(allvendors.length    >= id) 
   { 
      allvendors[id].vendor_name = vendor; 
      allvendors[id].project_name  = project; 
   } 

9
   localStorage.setItem("vendorsUpdate", 
JSON.stringify(allvendors)) 
   console.log(allvendors) 
} 
function  del(){ 
   var id   = document.getElementById('idDelete').value 
   if(allvendors.length    >= id) 
   { 
      delete  allvendors[id] 
   }  
   console.log(allvendors) 
   localStorage.setItem("vendorsUpdate", 
JSON.stringify(allvendors)) 
} 
export {allvendors}; 
export default  App; 
 
--------------------------------------------------------------------------------------------   

App.test.js 

import {  render,  screen }  from '@testing-library/react'; 
import App from './App'; 
 
test('renders   learn  react link',     ()   => { 
   render(<App />); 
   const linkElement = screen.getByText(/learn  react/i); 
   expect(linkElement).toBeInTheDocument(); 
}); 
-------------------------------------------------------------------------------------------   

 

10
finance.js 

import './App.css'; 
import {allvendors}   from './App'; 
 
function  finance()  { 
      return  ( 
         <div  className="App"> 
             <link  rel="stylesheet" 
href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/cs
s/bootstrap.min.css"  integrity="sha384-
Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/
dAiS6JXm" crossorigin="anonymous"></link> 
             <script 
src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/
bootstrap.min.js"></script> 
                 
             <div class="d-flex   justify-content-center"> 
                   <div  class="w-75 p-3"> 
                          <div class="jumbotron jumbotron-fluid"> 
                                <div  class="alert   alert-light" 
role="alert"> 
                                       <h1 className="display-
2">Finance Page</h1> 
                                </div> 
                                <hr/> 
                                <h1 className="display-4">View</h1> 
                                <p className="lead">View all project 
information here</p> 
                                <h4>Projects:</h4> 
                                <p>ID: Project  Name - Company - 
Cost</p> 

11
                                  <ul> 
                                         {allvendors.map(s   => ( 
                                         <div><p className="lead"> 
{s.id}:    {s.project_name}   -  {s.vendor_name} - 
${s.project_cost}</p></div>  
                                         ))} 
                                  </ul> 
                                  <hr/> 
 
                                  <h1 className="display-4">Add</h1> 
                                  <p  className="lead">Add a new 
project   here</p> 
                                  <form  class="w-50 mx-auto"> 
                                         <div  class="input-group"> 
                                                <div  class="input-group-
prepend"> 
                                                <div  class="input-group-
text">@</div> 
                                                </div> 
                                                <input   type="text" 
class="form-control"    placeholder="Vendor Name" 
id="vendorName"></input> 
                                         </div> 
                                         <div  class="input-group"> 
                                                <div  class="input-group-
prepend"> 
                                                <div  class="input-group-
text">@</div> 
                                                </div> 

12
                                                <input   type="text" 
class="form-control"    placeholder="Project    Name" 
id="projectName"></input> 
                                         </div> 
                                         <div  class="input-group"> 
                                                <div  class="input-group-
prepend"> 
                                                <div  class="input-group-
text">$</div> 
                                                </div> 
                                                <input   type="text" 
class="form-control"    placeholder="Edit   Cost" 
id="cost"></input> 
                                         </div> 
                                         <br></br> 
                                         <button  type="submit"   class="btn 
btn-secondary"  onClick={add}>Submit</button> 
                                  </form> 
 
                                  <hr/> 
                                  <h1 className="display-4">Edit</h1> 
                                  <p  className="lead">Edit an existing 
project   here</p> 
                                  <form  class="w-50 mx-auto"> 
                                  <div  class="input-group"> 
                                         <div  class="input-group-
prepend"> 
                                         <div  class="input-group-
text">#</div> 
                                         </div> 

13
                                         <input   type="number" 
class="form-control"    placeholder="Vendor ID" 
id="idEdit"></input> 
                                  </div> 
                                  <div  class="input-group"> 
                                         <div  class="input-group-
prepend"> 
                                         <div  class="input-group-
text">@</div> 
                                         </div> 
                                         <input   type="text"   class="form-
control"   placeholder="Project    Name" 
id="projectEdit"></input> 
                                  </div> 
                                  <div  class="input-group"> 
                                         <div  class="input-group-
prepend"> 
                                         <div  class="input-group-
text">$</div> 
                                         </div> 
                                         <input   type="text"   class="form-
control"   placeholder="Edit   Cost"  id="costEdit"></input> 
                                  </div> 
                                  <br></br> 
                                  <button  type="submit"   class="btn 
btn-secondary"  onClick={edit}>Submit</button> 
 
                                  </form> 
                                  <hr/> 
 

14
                                  <h1 className="display-
4">Delete</h1> 
                                  <p  className="lead">Delete an 
existing   project   here</p> 
                                         <form  class="w-50 mx-auto"> 
                                                <div  class="input-group"> 
                                                       <div  class="input-group-
prepend"> 
                                                       <div  class="input-group-
text">#</div> 
                                                       </div> 
                                                       <input   type="number" 
class="form-control"    placeholder="Project    ID" 
id="idDelete"></input> 
                                                </div> 
                                                <br></br> 
                                                <button  type="submit" 
class="btn  btn-secondary"  onClick={del}>Submit</button> 
 
                                         </form> 
                           </div> 
                    </div> 
             </div> 
 
          </div> 
       ); 
   } 
   function   add() 
   { 
       const vendor  = 
document.getElementById('vendorName').value 

15
      const project   = 
document.getElementById('projectName').value 
      const cost  = document.getElementById('cost').value 
 
      const newProject = { 
             "id"   :  allvendors.length, 
             "vendor_name" : vendor, 
             "project_name" : project, 
             "project_cost"  :   cost 
      } 
 
      //console.log(file.get()); 
      allvendors.push(newProject); 
      localStorage.setItem("vendorsUpdate", 
JSON.stringify(allvendors)) 
 
   } 
   function  edit() 
   { 
      const id   = document.getElementById('idEdit').value 
      const cost  = 
document.getElementById('costEdit').value 
      const project   = 
document.getElementById('projectEdit').value 
      if(allvendors.length     >= id) 
      { 
             allvendors[id].project_cost    = cost; 
             allvendors[id].project_name  = project; 
      } 
      localStorage.setItem("vendorsUpdate", 
JSON.stringify(allvendors)) 

16
   } 
   function del() 
   { 
      var id  = document.getElementById('idDelete').value 
      if(allvendors.length  >= id) 
      { 
            delete allvendors[id] 
      }  
      localStorage.setItem("vendorsUpdate", 
JSON.stringify(allvendors)) 
   } 
   export default finance; 
   
-------------------------------------------------------------------------------------------   

index.css 

body { 
   margin: 0; 
   font-family:  -apple-system, BlinkMacSystemFont, 'Segoe 
UI',  'Roboto',  'Oxygen', 
      'Ubuntu', 'Cantarell',    'Fira  Sans', 'Droid  Sans', 
'Helvetica Neue', 
      sans-serif; 
   -webkit-font-smoothing: antialiased; 
   -moz-osx-font-smoothing: grayscale; 
}code { 
   font-family:  source-code-pro, Menlo, Monaco, Consolas, 
'Courier New', 
      monospace;}} 
 
------------------------------------------------------------------------------------------   

17
index.js 

import React from 'react'; 
import ReactDOM from 'react-dom'; 
import './index.css'; 
import App from './App'; 
import finance  from './finance'; 
import reportWebVitals from './reportWebVitals'; 
import {  BrowserRouter as Router } from 'react-router-
dom'; 
import {  Routes } from './routes';  
 
ReactDOM.render( 
   <Router> 
      <link   rel="stylesheet" 
href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/cs
s/bootstrap.min.css"  integrity="sha384-
Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/
dAiS6JXm" crossorigin="anonymous"></link> 
      <script 
src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/
bootstrap.min.js"></script> 
      <nav className="navbar navbar-expand navbar-dark bg-
dark"> 
         <a className="navbar-brand" href="/">Team Budget 
Planner</a> 
         <div  class="container-fluid"> 
                <div  className="navbar-nav"> 
                       <a className="nav-link active" 
href="/">Product Manager View</a> 
                       <a className="nav-link" 
href="/finance">Finance View</a> 

18
                </div>    
         </div> 
      </nav> 
      <Routes /> 
   </Router>, 
   document.getElementById('root') 
); 
 
//  If   you want to  start   measuring performance in your 
app, pass a function 
//  to  log  results   (for   example: 
reportWebVitals(console.log)) 
//  or  send to  an analytics  endpoint.  Learn more: 
https://bit.ly/CRA-vitals 
reportWebVitals(); 
 
---------------------------------------------------------------------------------------------   

reportWebVitals.js 

const reportWebVitals = onPerfEntry => { 
   if   (onPerfEntry && onPerfEntry instanceof Function) { 
      import('web-vitals').then(({       getCLS, getFID, getFCP, 
getLCP, getTTFB }) => { 
         getCLS(onPerfEntry); 
         getFID(onPerfEntry); 
         getFCP(onPerfEntry); 
         getLCP(onPerfEntry); 
         getTTFB(onPerfEntry); 
      });}}; 
export default  reportWebVitals; 
-------------------------------------------------------------------------------------------   

19
routes.js 

import React from 'react'; 
//  eslint-disable-next-line 
import App from './App'; 
//  eslint-disable-next-line 
import finance from './finance'; 
import {Route, Switch, Redirect} from 'react-router-
dom'; 
export const Routes = () => { 
   return ( 
      <div> 
         <Switch> 
            <Route exact path="/App" component={App} /> 
            <Route exact path="/"> 
               <Redirect to="/App" /> 
            </Route> 
            <Route exact path="/finance" component={finance} 
/> 
         </Switch> 
      </div> 
   );}; 
-------------------------------------------------------------------------------------------   

vendors.json 

[ 
      {"id"   :  0, "vendor_name" : "Apple", "project_name" : 
"aplProject",  "project_cost" :  100000}, 
      {"id"   :  1, "vendor_name" : "Best Buy", 
"project_name" : "bbProject", "project_cost" : 

20
50000},{"id" : 2, "vendor_name" : "Dell", "project_name" 
: "dlProject", "project_cost" : 200000}, 
     {"id" :  3, "vendor_name" : "Facebook", 
"project_name" : "fbProject", "project_cost" : 20000}, 
     {"id" :  4, "vendor_name" : "Google", "project_name" 
: "gglProject", "project_cost" : 80000} 
] 
-------------------------------------------------------------------------------------------   

package.json 

{ 
  "name": "teambudgetplanner", 
  "version": "0.1.0", 
  "private": true, 
  "dependencies": { 
     "@testing-library/jest-dom": "^5.11.10", 
     "@testing-library/react": "^11.2.6", 
     "@testing-library/user-event": "^12.8.3", 
     "react": "^17.0.2", 
     "react-dom": "^17.0.2", 
     "react-scripts": "4.0.3", 
     "web-vitals": "^1.1.1" 
  }, 
  "scripts": { 
     "start": "react-scripts start", 
     "build": "react-scripts build", 
     "test": "react-scripts test", 
     "eject": "react-scripts eject" 
  }, 
  "eslintConfig": { 
     "extends": [ 

21
        "react-app", 
        "react-app/jest" 
     ] 
  }, 
  "browserslist":  { 
     "production": [ 
        ">0.2%", 
        "not  dead", 
        "not  op_mini all" 
     ], 
     "development": [ 
        "last  1 chrome version", 
        "last  1 firefox  version", 
        "last  1 safari  version" 
     ] 
  } 
} 
 

 


